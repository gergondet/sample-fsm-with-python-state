---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: false
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
# Additional robots to load
robots:
  jvrc1:
    frames:
      - name: LeftHandGraspFrame
        parent: l_wrist
        X_p_f:
          translation: [0.0, -0.0085, -0.110]
      - name: RightHandOpenFrame
        parent: r_wrist
        X_p_f:
          translation: [0.0, 0.0085, -0.1225]
      - name: LeftGripperCenter
        parent: LeftGripper
        X_p_f:
          translation: [0.0, 0.0, -0.1]
  ground:
    module: env/ground
# General constraints, always on
constraints:
- type: contact
- type: kinematics
  damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useMinimal: true
- type: collision
  r1: jvrc1
  r2: ground
  collisions:
    - body1: L_WRIST_Y_S
      body2: ground
      iDist: 0.01
      sDist: 0.005
      damping: 0
# Initial set of contacts
contacts: []

# Some options for a specific robot
jvrc1:
  posture:
    stiffness: 1
    weight: 10
  ff:
    stiffness: 2
    weight: 100
# Implement some additional text states
states:
  Sample:
    base: Python3#sample_states.SampleState
# Transitions map
transitions:
- [Sample, OK, SampleFSM_Initial, Strict]
